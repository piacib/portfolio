@use "sass:math";
@import "./style.module.scss";
@import "../HexagonSvg/style.module.scss";
body,
html {
  animation: overflowHide 0.25s $totalAnimationTime linear forwards;
  overflow: hidden;
}
@keyframes overflowHide {
  0% {
    overflow: hidden;
    height: 100dvh;
  }
  100% {
    overflow-y: auto;
  }
}
.scale_down {
  scale: $scaleDown;
}
.load-container {
  position: absolute;
  overflow: hidden;
  height: ($radius * 2 - 1) * $displayHeight;
  width: 100%;
  background: $backgroundColor;
  animation-fill-mode: forwards;
  // z-index: 0;
}

@keyframes opacity {
  0% {
    visibility: visible;
  }
  99% {
    visibility: visible;
  }

  100% {
    visibility: hidden;
  }
}
.hexagon {
  fill: $accentColor;
  position: absolute;
  transform: scale(0);
  z-index: 2;
  fill: $hexBackgroundColor;
}
$rows: $radius * 2 - 1;
@for $row from 1 through $rows {
  .load-container .row:nth-child(#{$row}) {
    top: ($row - 1) * $displayHeight;
    left: $row % 2 * $halfDisplayWidth - $displayWidth;
    width: $displayWidth * $hexCount;
    height: $displayHeight;
  }
  @for $hex from 1 through $hexCount {
    .load-container .row:nth-child(#{$row}) .hexagon:nth-child(#{$hex}) {
      margin-left: ($hex * $displayWidth) - $halfSvgWidth;
      margin-top: $halfSvgHeight * -1px;
    }
    .load-container .row:nth-child(#{$row}) .hexagon:nth-last-child(#{$hex}) {
      animation: pulse $animation-duration $startDelay forwards;
    }
    $startDelay: $startDelay - 0.25s;
  }
  $startDelay: $lastAnimationStart;
}
.load-container .row:nth-child(-n + 4) .hexagon {
  z-index: $cursorBallZ + 1;
}

.row {
  position: absolute;
}

@keyframes pulse {
  0% {
    -webkit-transform: scale(0);
    transform: scale(0);
    fill: $accentColor;
  }
  50% {
    -webkit-transform: scale(math.div(49, 304));
    transform: scale(math.div(49, 304));
    fill: $accentColor;
  }

  75% {
    -webkit-transform: scale(0);
    transform: scale(0);
    fill: $accentColor;
  }
  76% {
    -webkit-transform: scale(0);
    transform: scale(0);
    fill: $hexBackgroundColor;
  }
  100% {
    transform: scale($scaleDown);
    fill: $hexBackgroundColor;
  }
}
